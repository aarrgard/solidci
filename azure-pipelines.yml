#
## Build pipeline
#

trigger:
  branches:
    include:
    - master
    - SolidCI/*
 
pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  projectFolder: '$(Build.SourcesDirectory)'
  solidCIPowershellFolder: $(projectFolder)/SolidCI.Azure/Content/Powershell

steps:

#
# Restore nuget packages
#
- task: DotNetCoreCLI@2
  displayName: Nuget - restore
  inputs:
    command: restore
    projects: '$(projectFolder)/**/*.csproj'
    feedsToUse: config
    nugetConfigPath: $(projectFolder)/nuget.config

#
# Prepare nuget packages
#
- task: PowerShell@2
  displayName: SolidCI - Nuget prepare
  inputs:
    targetType: "filePath"
    filePath: $(solidCIPowershellFolder)/AzurePipelineScripts/solidci-nuget-prepare.ps1
  env: 
    projectFolder: $(projectFolder)
        
#
# Build stuff
#
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build - dotnet build $(buildConfiguration)'
  workingDirectory: $(projectFolder)

#
# Run tests
#
- task: DotNetCoreCLI@2
  displayName: Test - Run test projects
  inputs:
    command: test
    projects: '$(projectFolder)/**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'


#
# Pack it in a nuget assembly and copy to artifacts folder, then push it
#
- script: dotnet pack
  displayName: 'Nuget - Create packages'
  workingDirectory: $(projectFolder)

- task: CopyFiles@2
  displayName: 'Nuget - Copy packages to staging folder'
  inputs:
    contents: '$(projectFolder)/**/*.nupkg'
    targetFolder: $(Build.ArtifactStagingDirectory)

# Create a variable
- script: |
    echo '##vso[task.setvariable variable=sauce]crushed tomatoes'

# Use the variable
# "$(sauce)" is replaced by the contents of the `sauce` variable by Azure Pipelines
# before handing the body of the script to the shell.
- script: |
    echo my pipeline variable is $(sauce)

- bash: |
    echo my environment variable is $FEED_ID
    

- task: NuGetCommand@2
  displayName: 'Nuget - push - $(FEED_ID)'
  inputs:
    command: push
    publishVstsFeed: $(FEED_ID)

